form={}
function form.new()
	local self = {}
	local objects = {}
	self.mon={}

	function self.init(monside)
		self.mon = peripheral.wrap(monside)
	end

	function self.clear()
		self.mon.setBackgroundColor(colors.black)
		self.mon.clear()
	end

	function self.redraw()
		self.clear()
		for k,o in pairs(objects) do
			if(o ~= nil) then
			o.draw()
			end
		end
	end
	
	function self.touchWait ()
		event, touch, x, y = os.pullEvent("monitor_touch")
		for k,o in pairs(objects) do
			if(o ~= nil) then
				o.isClicked(x,y)
			end
		end
	end
	
	function self.addObject(o)
		table.insert(objects,o)
		return table.maxn(objects)
	end
	
	function self.deleteObject(key)
		objects[key]=nil
	end
	
	function self.eventGraber()
		while true do
			self.touchWait()
		end
	end
	
	function self.refresh()
		while true do
			self.redraw()
			sleep(1)
		end
end
	
	return self
end

button = {}
function button.new (aform,atext,acolor,ax,ay,acallback)
	local self = {}
	local callback=acallback
	local text = atext
	local color= acolor
	local x=ax
	local y=ay
	local form=aform
	local key=0
	function self.isClicked(cx,cy)
		if(((cy >= y and cy <= y+2) and ( cx >= x and cx<= x+string.len (text)+2)))then
		local tcol=color
		color=colors.red
		self.draw()
		callback()
		sleep(0.1)
		color=tcol
		self.draw()
		end
	end
	function self.draw()
		form.mon.setBackgroundColor(color)
		
		form.mon.setCursorPos(x,y)
		form.mon.write(string.rep(" ",string.len (text)+2))
		
		form.mon.setCursorPos(x,y+1)
		form.mon.write(" "..text.." ")
		
		form.mon.setCursorPos(x,y+2)
		form.mon.write(string.rep(" ",string.len (text)+2))
	end
	
	function self.delete()
		form.deleteObject(key)
	end
	
	key=form.addObject(self)
	
	return self
end

timeGraph = {}
function timeGraph.new(aform,atitle,aposx,aposy,awidth,aheight,adataProvider,ainterval)
	local self= {}
	local values={}
	local title= atitle
	local posx=aposx
	local posy=aposy
	local width=awidth
	local height=aheight
	local dataProvider=adataProvider
	local interval = ainterval
	local form=aform
	local key=0
	
	for k=1,width-2 do
		table.insert(values,0)
	end
	
	local function getmax()
		local max=0
		for k,v in pairs(values) do
			if v> max then max= v end
		end
		return max
	end
	
	local function addValue(v)
		table.insert(values,v)
		table.remove(values,1)
	end
	
	function self.run()
		while true do
			addValue(dataProvider())
			sleep(interval)
		end
	end
	
	function self.draw()
		local max = getmax()
		term.redirect(form.mon)
		paintutils.drawLine(posx,posy,posx+width,posy,colors.white)
		paintutils.drawLine(posx,posy+height,posx+width,posy+height,colors.white)
		paintutils.drawLine(posx,posy,posx,posy+height,colors.white)
		paintutils.drawLine(posx+width,posy,posx+width,posy+height,colors.white)
		--sleep(1)
		term.restore()
		form.mon.setCursorPos(posx+math.floor((width-string.len(title))/2),posy)
		form.mon.setBackgroundColor(colors.white)
		form.mon.setTextColor(colors.black)
		form.mon.write(title)
		if max>0 then
		term.redirect(form.mon)
			for k,v in pairs(values) do
				local gy=math.floor(v/max*(height-2))
				paintutils.drawPixel(posx+k,posy+height-1-gy,colors.lime)
			end
		term.restore()
		end
		
		form.mon.setBackgroundColor(colors.white)
		form.mon.setTextColor(colors.black)
		legend= "max:"..max.." current:"..values[width-2].." sampling:"..interval.."s"
		form.mon.setCursorPos(posx+math.floor((width-string.len(legend))/2),posy+height)
		form.mon.write(legend)
	end
	function self.isClicked(cx,cy)
		--if(((cy >= y and cy <= y+2) and ( cx >= x and cx<= x+string.len (text)+2)))then
		--callback()
		--end
	end
	
	
	function self.delete()
		form.deleteObject(key)
	end
	
	key=form.addObject(self)
	
	return self
end

--local b = button.new ("right","test",colors.green,2,2)
--b.draw()